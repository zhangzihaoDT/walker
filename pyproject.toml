[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "w33-utils-3"
version = "0.1.0"
description = "W33 utilities and tools collection with AI-powered data analysis"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "duckdb>=0.9.0",
    "pyarrow>=10.0.0",
    "openpyxl>=3.1.0",
    "xlsxwriter>=3.1.0",
    "gradio>=5.39.0",
    "zhipuai>=2.0.0",
    "python-dotenv>=1.0.0",
    "langsmith>=0.1.0",
    "langchain-openai>=0.3.29",
    "langchain>=0.3.27",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
]

llm = [
    "openai>=1.0.0",
    "anthropic>=0.3.0",
    "transformers>=4.21.0",
    "torch>=1.12.0",
]

data = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "jupyter>=1.0.0",
    "scikit-learn>=1.1.0",
]

[project.urls]
Homepage = "https://github.com/w33team/w33-utils-3"
Repository = "https://github.com/w33team/w33-utils-3"
Issues = "https://github.com/w33team/w33-utils-3/issues"

[tool.setuptools.packages.find]
where = ["."]  # list of folders that contain the packages (["src"] by default)
include = ["core*", "modules*", "agents*", "llm*"]  # package names should match these glob patterns (["*"] by default)
exclude = ["test*", "devlog*"]  # exclude packages matching these glob patterns (empty by default)

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m not slow')",
    "integration: marks tests as integration tests",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "duckdb.*",
    "pyarrow.*",
]
ignore_missing_imports = true
